#!/bin/csh -f       
# In Cshell script, the 1st line should start with "#!", except the 1st line"#!", other "#" are notes in the script (Note: can not put the notes in first line)
echo "hello world"
echo $HOME # display the root directory
echo "***********************$0 study***********" # double quotation marks would consider $0 as variable, so output the script name
echo '***********************$0 study***********' # single quotation marks would consider the contens as string
echo $0 # "S0" represents this script name
echo "name of this script: $0" # "S0" represents this script name
echo "1st input parameter: $1"   # "$1" represents the 1st input parameter 
echo "2nd input parameter: $2"   # "$2" represents the 2nd input parameter 

echo '***************the next line output the num of input parameters in this script*****'
echo "num of param: $#" # "$#" represents the input parameter number

echo '***************$* study**********'
echo " param: $*" # $* output all of the input parameters in this script
echo $*>param  # print the input parameters into file "param"
echo '**************************zero pp************************************'

echo $argv[1]
echo "1st input param: $argv[1]"
#as=expr 2 + 2
echo "as"
set path1='/ux/INNOBASE_IM4101_DIPDCROSS/home/cns1063/shell_study'
set project1='gvim $path1/hello.sh'

echo '**************************zero************************************'
pwd
echo "the original script location is: `pwd`"
set CURDIR=`dirname $0` #`` represents the inner content is a shell command, where `dirname $0` command is to obatain the directory of the script
set PRJDIR = `cd $CURDIR/../.. && pwd` # change the current directory to " $CURDIR/../.." and then print the current directory (so far, not change the directory)
#set PRJDIR =  $CURDIR/../..
echo "curdir: $CURDIR; prjdir: $PRJDIR"
echo "analysis directory:`pwd`"
cd $PRJDIR # change the directory
#note for the above line code: although the varibale $PRJDIR is a action from its defination (actually, is not a directory), but the above line code can treat varibale $PRJDIR as a path, so that directory changed here.
echo "analysis directory2:`pwd`"
set CURDIR=`dirname aa2` #??????????????????????
echo "curdir: $CURDIR; prjdir: $PRJDIR"

echo '**************************1st************************************'
set ab=1
echo $ab

set abc="set use set"
echo $abc

set abcd='echo "hello wrold"; pwd'
$abcd

set aa=1+2
echo $aa
echo '**********************2nd****************************************'

echo '**********************3rd****************************************'

#set aab
#expr 99991 + 2 > aab#????????????????
#echo $aa1

echo '**************************************************************'
set aa2
@ aa2 = 5 + 5
#aa2=expr 91 + 2 #????????????????
echo $aa2

set v2
@ v2 = $aa2 + 3 # in C_shell, use @ to conduct mathematical calculation
echo $v2
#set a=1
#set c
#@ c=$(1+2)
#echo $c

if ( $#argv == 2) then		 # if the num of the input param is 2, print the num of input parameter					
	echo "num of input param is 2"
  echo $#
else if ($#argv == 0) then
	echo "num of input param is 0"			
  exit 1
endif

echo $?# check the exit value is 0 or 1, if the script exit before this line code, would not print this result
echo "********************************usage***********************************************"
if ($#argv == 2) then
  set usage
endif				

if ($?usage) then
	cat << EOU
Usage:
 run_com <test_name> [options] [ohter plus argus]
 run_com launches a vsc simulation executable on the 
 test specified by the argument <test name>

 Options:
 -help:
 letx:
 fpga:
 run:

 The result output is placed in the following directory:
EOU
endif

cat << EOU
progress end
EOU

echo '***********************date usage study (begin)******************************'
echo `date`
echo "the real time is: `date`"
echo `date '--date=1 seconds ago' +%Y-%m-%d-%H-%T`
echo `date '--date=1 hour seconds ago' +%Y-%m-%d-%H-%T`
#echo $(date '--date=1 hour ago' +%Y-%m-%d-%H)
echo '***********************date usage study (end)******************************'


echo '*******************dirname command and pwd study***********************'
set script_location=`dirname $0` # `dirname $0` represents obtaining the directory of the script
echo "the script location1 is : $script_location" # if run `dirname $0`, the output is "."
echo "the script location2 is : `cd $script_location`" # by running this line code, you can find there is no contents printed, as only changed the directory but not printed the current directory
echo "the script location3 is : `cd $script_location && pwd`" # first change the current directory; second, pwd printed the current directory. So we can see that the current directory (absolute path) printed. 
pwd  # pwd prints the current directory of the current working path 
echo "the current directory is: `pwd`"

echo '*******************change directory study***********************'
set folder_location=`cd $script_location/.. && pwd`
echo $folder_location
echo "the current folder location is: $folder_location"

setenv script_location2  ${script_location}/cns1063/shell_study
#set script_location2=${script_location}/cns1063/shell_study  #this line code and the above the line code both can effectively change the current directory
echo "the current working directory is: `cd $script_location2 && pwd`" # the working directory changed
echo '*********************script_location2********************'
echo $script_location2 
set cns_1063 = ${script_location2}/.. # NOte!!!: here , variable cns_1063 is not a directory, only conduct operation on this variable cns_1063, cns_1063 would be considered as a directory,
echo '*************************cns*******************'
echo $cns_1063 # by printed $cns_1063, you can find $cns_1063 is "./cns1063/shell_study/.." instead of 
cd $cns_1063/shell_study_folder 
echo "the current directory(creat folder): `pwd`"

mkdir -p folder1/folder2
cd .. #back to the upper layer fo the folder
echo "back to the upper folder for one layer: `pwd`"
cd ./shell_study
echo "back to the inner folder for one layer: `pwd`"
#cp -rf hello.sh  $cns_1063/shell_study_folder/folder1/folder2

echo '*******************copy study***********************'
#cp -rf $shell_study_folder/shell_study_folder/../shell_study/hello.sh $shell_study_folder/shell_study_folder/folder1/folder2
echo $folder_location
cp -rf hello.sh $folder_location/home/cns1063/shell_study_folder/folder1/folder2
 
#cd /ux/INNOBASE_IM4101_DIPDCROSS/home/cns1063/shell_study/..
echo "back to the upper folder for one layer: `pwd`"
echo `ls  $folder_location/home/cns1063/shell_study_folder/folder1`

# foreach study
echo "******************************foreach usage***********************"
